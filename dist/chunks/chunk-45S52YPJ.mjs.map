{
  "version": 3,
  "sources": ["../../src/utils/toggle-scroll.ts", "../../src/utils/color-change-scroll.ts", "../../src/utils/stagger-item-scroll.ts", "../../src/utils/rotate-srcoll.ts", "../../src/utils/progress-bar-scroll.ts", "../../src/utils/pin-element-scroll.ts"],
  "sourcesContent": ["export async function toggleScroll(id:string){\n    // Dynamically import GSAP and its plugins\n    const { gsap } = await import('gsap');\n    const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n    gsap.registerPlugin(ScrollTrigger)\n    \n    ScrollTrigger.create({\n        trigger: `#${id}`,\n        start: \"top center\",\n        end: \"bottom center\",\n        onEnter: () => {console.log('do something')},\n        onLeaveBack: () => {console.log('do something else')}\n      });\n}", "\n\nexport async function colorChange(id: string,\n  start:number,\n  end:number,\n  position:\"top\" | \"center\" | \"bottom\" | string = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" | string = \"top\",\n  colorto:string,\n  colorfrom:string,\n  mark:boolean) {\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n     gsap.registerPlugin(ScrollTrigger)\n  const parent = document.getElementById(id);\n  const child = parent?.firstElementChild as HTMLElement | null;\n\n  if (!parent || !child) {\n    console.warn(`colorChange: Missing parent or child for id \"${id}\"`);\n    return;\n  }\n\n  gsap.to(child, {\n    scrollTrigger: {\n      trigger: parent,\n      start: `${position} ${start}%`,\n      end: `${positionEnd} ${end}%`,\n      scrub: true,\n      markers:mark\n    },\n    backgroundColor:colorto ,\n    color:colorfrom \n  });\n}\n", "export async function staggerItemScroll(id: string,\n  start:number,\n  end:number,\n  position:\"top\" | \"center\" | \"bottom\" = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" = \"top\",\n  mark:boolean) {\n      // Dynamically import GSAP and its plugins\n  const { gsap } = await import('gsap');\n  const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n  gsap.registerPlugin(ScrollTrigger);\n  const parent = document.getElementById(id);\n  if (!parent) return;\n\n  const items = parent.querySelectorAll<HTMLElement>('*'); \n\n  if (!items.length) return;\n\n  gsap.from(items, {\n    scrollTrigger: {\n      trigger: parent,\n      start: `${position} ${start}%`,\n      end: `${positionEnd} ${end}%`,\n      scrub: true,\n      markers:mark,\n    },\n    y: 50,\n    opacity: 0,\n    duration: 0.6,\n    stagger: 0.2,\n  });\n}", "export async function rotateScroll(id: string,\n  start:number,\n  end:number,\n  amount:number,\n  position:\"top\" | \"center\" | \"bottom\" = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" = \"top\",\n  mark:boolean) {\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n  const parent = document.getElementById(id);\n  if (!parent) return;\n\n  const children = parent.querySelectorAll<HTMLElement>('*'); // Direct children only\n\n  if (!children.length) return;\n\n  gsap.from(children, {\n    scrollTrigger: {\n      trigger: parent,\n      start: `${position} ${start}%`,\n      end: `${positionEnd} ${end}%`,\n      scrub: true,\n      markers:mark,\n    },\n    rotation: amount,\n    opacity: 0,\n    duration: 1,\n    // stagger: 0.2, // optional: stagger effect\n  });\n}\n", "\nexport async function progressBar(id:string,\n  start:number,\n  end:number,\n  position:\"top\" | \"center\" | \"bottom\" = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" = \"top\",\n  mark:boolean){\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n\n  const parent = document.getElementById(id);\n  if (!parent) return;\n\n  const children = parent.querySelectorAll<HTMLElement>('*'); // Direct children only\n\n  if (!children.length) return;\n    gsap.to(children, {\n        scrollTrigger: {\n          trigger: `#${id}`,\n          start: `${position} ${start}%`,\n          end: `${positionEnd} ${end}%`,\n          scrub: 3,\n          markers:mark\n        },\n        width: \"100%\"\n      });\n}", "export async function Pin(id:string,start:number,end:number,  \nposition:\"top\" | \"center\" | \"bottom\" | string = \"top\" ,\npositionEnd:\"top\" | \"center\" | \"bottom\" | string = \"top\"\n,mark:boolean){\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger)\n    gsap.to(`#${id}`, {\n        scrollTrigger: {\n          trigger: `#${id}`,\n          pin: true,\n          start: `${position} ${start}%`,\n          end: `${positionEnd} ${end}%`,\n          scrub:true,\n          markers:mark\n        }\n      });\n}"],
  "mappings": "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",
  "names": []
}
