{
  "version": 3,
  "sources": ["../../src/utils/zoom.ts", "../../src/utils/slideInRight.ts", "../../src/utils/slideInLeft.ts", "../../src/utils/pan.ts", "../../src/utils/flipReveal.ts", "../../src/utils/fadeIn.ts", "../../src/utils/rollRevealReverse.ts", "../../src/utils/rollReveal.ts"],
  "sourcesContent": ["//  make of the the element \nexport async function zoom (id:string,start:Number,\n  end:number,\n  amount:number,\n  position:\"top\" | \"center\" | \"bottom\" | string = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" | string = \"top\",\n  mark:boolean){\n    // Dynamically import GSAP and its plugins\n    const { gsap } = await import('gsap');\n    const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n    const { SplitText } = await import('gsap/SplitText');\n    gsap.registerPlugin(ScrollTrigger,SplitText)\n    const parent = document.getElementById(id);\n    if (!parent) return;\n    const children = parent.querySelectorAll<HTMLElement>('*');\n    gsap.fromTo(children,\n    {\n      scale: 1\n    },\n    {\n      scale: amount,\n      duration: 2,\n      ease: \"power2.out\",\n      scrollTrigger: {\n        trigger: parent,\n        start: `${position} ${start}%`,\n        end: `${positionEnd} ${end}%`,\n        scrub: 0.5,\n        markers:mark\n      }\n    }\n  );\n}", "export async function slideInRight (id:string,\n  start:number,\n  end:number,\n  amount:number,\n  position:\"top\" | \"center\" | \"bottom\" | string = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" | string = \"top\",\n  mark:boolean){\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n    gsap.from(`#${id}`, {\n        x: amount,\n        opacity: 0,\n        duration: 2,\n        ease: \"power3.out\",\n        scrollTrigger: {\n          trigger: `#${id}`, // Element that triggers the animation\n          start: `${position} ${start}%`,          // When top hits 75% of viewport\n          end: `${positionEnd} ${end}%`,            // When top hits 25% of viewport\n          scrub:true,\n          markers:mark\n        }\n      }); \n}", "export async function slideInLeft (id:string,\n  start:number,\n  end:number,\n  amount:number,\n  position:\"top\" | \"center\" | \"bottom\" | string = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" | string = \"top\",\n  mark:boolean\n  ){\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n    gsap.from(`#${id}`, {\n        x: -amount,\n        opacity: 0,\n        duration: 2,\n        ease: \"power3.out\",\n        scrollTrigger: {\n          trigger: `#${id}`,\n          start: `${position} ${start}%`,\n          end: `${positionEnd} ${end}%`,\n          scrub:true,\n          markers:mark\n        }\n      });\n}", "\n\nexport async function pan(id:string) {\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      const { SplitText } = await import('gsap/SplitText');\n      \n  const container = document.querySelector(`#${id}`) as HTMLElement;\n  if (!container) return;\n\n  const children = Array.from(container.children) as HTMLElement[];\n\n  const intensityX = 30;\n  const intensityY = 30;\n  const duration = 0.5;\n\n  const handleMouseMove = (e: MouseEvent) => {\n    const bounds = container.getBoundingClientRect();\n    const centerX = bounds.left + bounds.width / 2;\n    const centerY = bounds.top + bounds.height / 2;\n\n    const deltaX = (e.clientX - centerX) / (bounds.width / 20);\n    const deltaY = (e.clientY - centerY) / (bounds.height / 2);\n\n    const targetX = deltaX * intensityX;\n    const targetY = deltaY * intensityY;\n\n    children.forEach((child) => {\n      gsap.to(child, {\n        x: targetX,\n        y: targetY,\n        duration: duration * 1.5,\n        ease: 'power2.out',\n      });\n    });\n  };\n\n  container.addEventListener('mousemove', handleMouseMove);\n\n  // Optional: reset on mouse leave\n  container.addEventListener('mouseleave', () => {\n    children.forEach((child) => {\n      gsap.to(child, { x: 0, y: 0, duration: 0.5, ease: 'power2.out' });\n    });\n  });\n\n  // Cleanup function\n  return () => {\n    container.removeEventListener('mousemove', handleMouseMove);\n  };\n}\n", "export async function flipReveal (id:string,\n  start:number,\n  end:number,\n  rotations:number,\n  position:\"top\" | \"center\" | \"bottom\" | string = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" | string = \"top\",\n  mark:boolean){\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n  const parent = document.getElementById(id);\n      if (!parent) return;\n    \n      const children = parent.querySelectorAll<HTMLElement>('*'); // Animate children\n    \n      // Add perspective to parent for 3D rotation\n      gsap.set(parent, { transformPerspective: 2000 });\n    \n      const tl = gsap.timeline({\n      scrollTrigger: {\n      trigger: parent,\n      start: `${position} ${start}%`,\n      end: `${positionEnd} ${end}%`,\n      toggleActions: \"play none none none\",\n      scrub:true,\n      markers:mark\n      }\n    })\n    let num = 3;\n    tl.to(children, {\n      rotationY: `+=${360 * num}`,\n      stagger: 0.2,\n      duration: 2,\n      ease: \"back.out(1.7)\",\n      transformPerspective: 2000,\n      onComplete: addFinalWobble\n    });\n    function addFinalWobble() {\n        gsap.to(children, {\n          rotationY: `+=2${rotations}`,\n          duration: 0.5,\n          yoyo: true,\n          repeat: 3,\n          ease: \"sine.inOut\"\n        });\n      }\n\n}", "export async function fadeIn (id:string,\n  start:number,\n  end:number,\n  position:\"top\" | \"center\" | \"bottom\" | string = \"top\" ,\n  positionEnd:\"top\" | \"center\" | \"bottom\" | string = \"top\",\n  mark:boolean){\n      // Dynamically import GSAP and its plugins\n \n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n    gsap.from(`#${id}`, {\n        opacity: 0,\n  \n        ease: \"power2.out\",\n        scrollTrigger: {\n        trigger: `#${id}`, // Element that triggers the animation\n        start: `${position} ${start}%`,   // When the top of `.fade_in` hits 80% of the viewport\n        end: `${positionEnd} ${end}%`,     // When the top of `.fade_in` hits 20% of the viewport\n        scrub:true,\n        markers:mark\n      }\n      });\n}", "export async function rollRevealReverse(\n  id: string \n) {\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n      const el = document.querySelector<HTMLElement>(`[data-id=\"${id}\"]`);\n      if (!el) {\n        console.warn(`Element with ID \"${id}\" not found`);\n        return;\n      }\n  // Set initial clip path\n  gsap.set(el, {\n    clipPath: \"polygon(0% 100%, 100% 100%, 100% 100%, 0% 100%)\"\n  });\n\n  const start = el.dataset.start ?? '0';\n  const end = el.dataset.end ?? '100';\n  const position = el.dataset.position ?? 'top';\n  const positionEnd = el.dataset.positionend ?? 'bottom';\n  const mark = el.dataset.mark === 'true';\n  const duration = parseFloat(el.dataset.duration ?? '0.5');\n  // Create and run the reveal animation\n  \n  // Create timeline with ScrollTrigger\n  const tl = gsap.timeline({\n    scrollTrigger: {\n      trigger: el,\n      start: `${position} ${start}%`,   // When top of element hits 80% viewport\n      end: `${positionEnd} ${end}%`,     // When top hits 20% viewport\n      scrub:true,\n      markers:mark\n    }\n  });\n  tl.to(el, {\n    clipPath: \"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)\",\n    duration,\n    ease: \"power3.out\"\n  });\n\n  return tl; // optional: return timeline for chaining or control\n}\n", "export async function rollReveal(\n  id: string ,\n) {\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n\n      const el = document.querySelector<HTMLElement>(`[data-id=\"${id}\"]`);\n\n      if (!el) {\n        console.warn(`Element with ID \"${id}\" not found`);\n        return;\n      }\n  // Set initial clip path\n  gsap.set(el, {\n    clipPath: \"polygon(0% 0%, 100% 0%, 100% 0%, 0% 0%)\"\n  });\n\n  const start = el.dataset.start ?? '0';\n  const end = el.dataset.end ?? '100';\n  const position = el.dataset.position ?? 'top';\n  const positionEnd = el.dataset.positionend ?? 'bottom';\n  const mark = el.dataset.mark === 'true';\n  const duration = parseFloat(el.dataset.duration ?? '0.5');\n\n  // Create and run the reveal animation\n  // Create timeline with ScrollTrigger\n  const tl = gsap.timeline({\n    scrollTrigger: {\n      trigger: el,\n      start: `${position} ${start}%`,   \n      end: `${positionEnd} ${end}%`,    \n      scrub:true,\n      markers: mark\n    }\n  });\n  tl.to(el, {\n    clipPath: \"polygon(0% 0%, 100% 0%, 100% 100%, 0% 100%)\",\n    duration,\n    ease: \"power3.out\"\n  });\n\n  return tl; // optional: return timeline for chaining or control\n}\n"],
  "mappings": ";AACA,eAAsB,KAAM,IAAU,OACpC,KACA,QACA,WAAgD,OAChD,cAAmD,OACnD,MAAa;AAEX,QAAM,EAAE,KAAK,IAAI,MAAM,OAAO,qBAAM;AACpC,QAAM,EAAE,cAAc,IAAI,MAAM,OAAO,8BAAoB;AAC3D,QAAM,EAAE,UAAU,IAAI,MAAM,OAAO,0BAAgB;AACnD,OAAK,eAAe,eAAc,SAAS;AAC3C,QAAM,SAAS,SAAS,eAAe,EAAE;AACzC,MAAI,CAAC;AAAQ;AACb,QAAM,WAAW,OAAO,iBAA8B,GAAG;AACzD,OAAK;AAAA,IAAO;AAAA,IACZ;AAAA,MACE,OAAO;AAAA,IACT;AAAA,IACA;AAAA,MACE,OAAO;AAAA,MACP,UAAU;AAAA,MACV,MAAM;AAAA,MACN,eAAe;AAAA,QACb,SAAS;AAAA,QACT,OAAO,GAAG,QAAQ,IAAI,KAAK;AAAA,QAC3B,KAAK,GAAG,WAAW,IAAI,GAAG;AAAA,QAC1B,OAAO;AAAA,QACP,SAAQ;AAAA,MACV;AAAA,IACF;AAAA,EACF;AACF;;;AChCA,eAAsB,aAAc,IAClC,OACA,KACA,QACA,WAAgD,OAChD,cAAmD,OACnD,MAAa;AAET,QAAM,EAAE,KAAK,IAAI,MAAM,OAAO,qBAAM;AACpC,QAAM,EAAE,cAAc,IAAI,MAAM,OAAO,8BAAoB;AAC3D,OAAK,eAAe,aAAa;AACnC,OAAK,KAAK,IAAI,EAAE,IAAI;AAAA,IAChB,GAAG;AAAA,IACH,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,eAAe;AAAA,MACb,SAAS,IAAI,EAAE;AAAA;AAAA,MACf,OAAO,GAAG,QAAQ,IAAI,KAAK;AAAA;AAAA,MAC3B,KAAK,GAAG,WAAW,IAAI,GAAG;AAAA;AAAA,MAC1B,OAAM;AAAA,MACN,SAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACP;;;ACxBA,eAAsB,YAAa,IACjC,OACA,KACA,QACA,WAAgD,OAChD,cAAmD,OACnD,MACC;AAEG,QAAM,EAAE,KAAK,IAAI,MAAM,OAAO,qBAAM;AACpC,QAAM,EAAE,cAAc,IAAI,MAAM,OAAO,8BAAoB;AAC3D,OAAK,eAAe,aAAa;AACnC,OAAK,KAAK,IAAI,EAAE,IAAI;AAAA,IAChB,GAAG,CAAC;AAAA,IACJ,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,eAAe;AAAA,MACb,SAAS,IAAI,EAAE;AAAA,MACf,OAAO,GAAG,QAAQ,IAAI,KAAK;AAAA,MAC3B,KAAK,GAAG,WAAW,IAAI,GAAG;AAAA,MAC1B,OAAM;AAAA,MACN,SAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACP;;;ACvBA,eAAsB,IAAI,IAAW;AAE/B,QAAM,EAAE,KAAK,IAAI,MAAM,OAAO,qBAAM;AACpC,QAAM,EAAE,cAAc,IAAI,MAAM,OAAO,8BAAoB;AAC3D,QAAM,EAAE,UAAU,IAAI,MAAM,OAAO,0BAAgB;AAEvD,QAAM,YAAY,SAAS,cAAc,IAAI,EAAE,EAAE;AACjD,MAAI,CAAC;AAAW;AAEhB,QAAM,WAAW,MAAM,KAAK,UAAU,QAAQ;AAE9C,QAAM,aAAa;AACnB,QAAM,aAAa;AACnB,QAAM,WAAW;AAEjB,QAAM,kBAAkB,CAAC,MAAkB;AACzC,UAAM,SAAS,UAAU,sBAAsB;AAC/C,UAAM,UAAU,OAAO,OAAO,OAAO,QAAQ;AAC7C,UAAM,UAAU,OAAO,MAAM,OAAO,SAAS;AAE7C,UAAM,UAAU,EAAE,UAAU,YAAY,OAAO,QAAQ;AACvD,UAAM,UAAU,EAAE,UAAU,YAAY,OAAO,SAAS;AAExD,UAAM,UAAU,SAAS;AACzB,UAAM,UAAU,SAAS;AAEzB,aAAS,QAAQ,CAAC,UAAU;AAC1B,WAAK,GAAG,OAAO;AAAA,QACb,GAAG;AAAA,QACH,GAAG;AAAA,QACH,UAAU,WAAW;AAAA,QACrB,MAAM;AAAA,MACR,CAAC;AAAA,IACH,CAAC;AAAA,EACH;AAEA,YAAU,iBAAiB,aAAa,eAAe;AAGvD,YAAU,iBAAiB,cAAc,MAAM;AAC7C,aAAS,QAAQ,CAAC,UAAU;AAC1B,WAAK,GAAG,OAAO,EAAE,GAAG,GAAG,GAAG,GAAG,UAAU,KAAK,MAAM,aAAa,CAAC;AAAA,IAClE,CAAC;AAAA,EACH,CAAC;AAGD,SAAO,MAAM;AACX,cAAU,oBAAoB,aAAa,eAAe;AAAA,EAC5D;AACF;;;ACnDA,eAAsB,WAAY,IAChC,OACA,KACA,WACA,WAAgD,OAChD,cAAmD,OACnD,MAAa;AAET,QAAM,EAAE,KAAK,IAAI,MAAM,OAAO,qBAAM;AACpC,QAAM,EAAE,cAAc,IAAI,MAAM,OAAO,8BAAoB;AAC3D,OAAK,eAAe,aAAa;AACrC,QAAM,SAAS,SAAS,eAAe,EAAE;AACrC,MAAI,CAAC;AAAQ;AAEb,QAAM,WAAW,OAAO,iBAA8B,GAAG;AAGzD,OAAK,IAAI,QAAQ,EAAE,sBAAsB,IAAK,CAAC;AAE/C,QAAM,KAAK,KAAK,SAAS;AAAA,IACzB,eAAe;AAAA,MACf,SAAS;AAAA,MACT,OAAO,GAAG,QAAQ,IAAI,KAAK;AAAA,MAC3B,KAAK,GAAG,WAAW,IAAI,GAAG;AAAA,MAC1B,eAAe;AAAA,MACf,OAAM;AAAA,MACN,SAAQ;AAAA,IACR;AAAA,EACF,CAAC;AACD,MAAI,MAAM;AACV,KAAG,GAAG,UAAU;AAAA,IACd,WAAW,KAAK,MAAM,GAAG;AAAA,IACzB,SAAS;AAAA,IACT,UAAU;AAAA,IACV,MAAM;AAAA,IACN,sBAAsB;AAAA,IACtB,YAAY;AAAA,EACd,CAAC;AACD,WAAS,iBAAiB;AACtB,SAAK,GAAG,UAAU;AAAA,MAChB,WAAW,MAAM,SAAS;AAAA,MAC1B,UAAU;AAAA,MACV,MAAM;AAAA,MACN,QAAQ;AAAA,MACR,MAAM;AAAA,IACR,CAAC;AAAA,EACH;AAEN;;;AChDA,eAAsB,OAAQ,IAC5B,OACA,KACA,WAAgD,OAChD,cAAmD,OACnD,MAAa;AAGT,QAAM,EAAE,KAAK,IAAI,MAAM,OAAO,qBAAM;AACpC,QAAM,EAAE,cAAc,IAAI,MAAM,OAAO,8BAAoB;AAC3D,OAAK,eAAe,aAAa;AACnC,OAAK,KAAK,IAAI,EAAE,IAAI;AAAA,IAChB,SAAS;AAAA,IAET,MAAM;AAAA,IACN,eAAe;AAAA,MACf,SAAS,IAAI,EAAE;AAAA;AAAA,MACf,OAAO,GAAG,QAAQ,IAAI,KAAK;AAAA;AAAA,MAC3B,KAAK,GAAG,WAAW,IAAI,GAAG;AAAA;AAAA,MAC1B,OAAM;AAAA,MACN,SAAQ;AAAA,IACV;AAAA,EACA,CAAC;AACP;;;ACvBA,eAAsB,kBACpB,IACA;AAEI,QAAM,EAAE,KAAK,IAAI,MAAM,OAAO,qBAAM;AACpC,QAAM,EAAE,cAAc,IAAI,MAAM,OAAO,8BAAoB;AAC3D,OAAK,eAAe,aAAa;AACjC,QAAM,KAAK,SAAS,cAA2B,aAAa,EAAE,IAAI;AAClE,MAAI,CAAC,IAAI;AACP,YAAQ,KAAK,oBAAoB,EAAE,aAAa;AAChD;AAAA,EACF;AAEJ,OAAK,IAAI,IAAI;AAAA,IACX,UAAU;AAAA,EACZ,CAAC;AAED,QAAM,QAAQ,GAAG,QAAQ,SAAS;AAClC,QAAM,MAAM,GAAG,QAAQ,OAAO;AAC9B,QAAM,WAAW,GAAG,QAAQ,YAAY;AACxC,QAAM,cAAc,GAAG,QAAQ,eAAe;AAC9C,QAAM,OAAO,GAAG,QAAQ,SAAS;AACjC,QAAM,WAAW,WAAW,GAAG,QAAQ,YAAY,KAAK;AAIxD,QAAM,KAAK,KAAK,SAAS;AAAA,IACvB,eAAe;AAAA,MACb,SAAS;AAAA,MACT,OAAO,GAAG,QAAQ,IAAI,KAAK;AAAA;AAAA,MAC3B,KAAK,GAAG,WAAW,IAAI,GAAG;AAAA;AAAA,MAC1B,OAAM;AAAA,MACN,SAAQ;AAAA,IACV;AAAA,EACF,CAAC;AACD,KAAG,GAAG,IAAI;AAAA,IACR,UAAU;AAAA,IACV;AAAA,IACA,MAAM;AAAA,EACR,CAAC;AAED,SAAO;AACT;;;AC1CA,eAAsB,WACpB,IACA;AAEI,QAAM,EAAE,KAAK,IAAI,MAAM,OAAO,qBAAM;AACpC,QAAM,EAAE,cAAc,IAAI,MAAM,OAAO,8BAAoB;AAC3D,OAAK,eAAe,aAAa;AAEjC,QAAM,KAAK,SAAS,cAA2B,aAAa,EAAE,IAAI;AAElE,MAAI,CAAC,IAAI;AACP,YAAQ,KAAK,oBAAoB,EAAE,aAAa;AAChD;AAAA,EACF;AAEJ,OAAK,IAAI,IAAI;AAAA,IACX,UAAU;AAAA,EACZ,CAAC;AAED,QAAM,QAAQ,GAAG,QAAQ,SAAS;AAClC,QAAM,MAAM,GAAG,QAAQ,OAAO;AAC9B,QAAM,WAAW,GAAG,QAAQ,YAAY;AACxC,QAAM,cAAc,GAAG,QAAQ,eAAe;AAC9C,QAAM,OAAO,GAAG,QAAQ,SAAS;AACjC,QAAM,WAAW,WAAW,GAAG,QAAQ,YAAY,KAAK;AAIxD,QAAM,KAAK,KAAK,SAAS;AAAA,IACvB,eAAe;AAAA,MACb,SAAS;AAAA,MACT,OAAO,GAAG,QAAQ,IAAI,KAAK;AAAA,MAC3B,KAAK,GAAG,WAAW,IAAI,GAAG;AAAA,MAC1B,OAAM;AAAA,MACN,SAAS;AAAA,IACX;AAAA,EACF,CAAC;AACD,KAAG,GAAG,IAAI;AAAA,IACR,UAAU;AAAA,IACV;AAAA,IACA,MAAM;AAAA,EACR,CAAC;AAED,SAAO;AACT;",
  "names": []
}
