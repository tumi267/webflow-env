{
  "version": 3,
  "sources": ["../../src/utils/toggle-scroll.ts", "../../src/utils/color-change-scroll.ts", "../../src/utils/stagger-item-scroll.ts", "../../src/utils/rotate-srcoll.ts", "../../src/utils/progress-bar-scroll.ts", "../../src/utils/pin-element-scroll.ts"],
  "sourcesContent": ["export async function toggleScroll(id:string){\n    // Dynamically import GSAP and its plugins\n    const { gsap } = await import('gsap');\n    const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n    gsap.registerPlugin(ScrollTrigger)\n    \n    ScrollTrigger.create({\n        trigger: `#${id}`,\n        start: \"top center\",\n        end: \"bottom center\",\n        onEnter: () => {console.log('do something')},\n        onLeaveBack: () => {console.log('do something else')}\n      });\n}", "\n\nexport async function colorChange() {\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n     gsap.registerPlugin(ScrollTrigger)\n     const elements = document.querySelectorAll<HTMLElement>(`[data-animation=\"color\"]`);\n     const cleanups: (() => void)[] = [];\n   \n     elements.forEach((el) => {\n     // Parse dataset values with fallbacks\n     const start = el.dataset.start ?? '0';\n     const end = el.dataset.end ?? '100';\n     const position = el.dataset.position ?? 'top';\n     const positionEnd = el.dataset.positionend ?? 'bottom';\n     const mark = el.dataset.mark === 'true';\n     const colorto = el.dataset.colorto ?? '\"#4a00e0\"';\n     const textcolorto  = el.dataset.textcolorto  ?? \"#FFFF00\";\n     \n     const child = el?.firstElementChild as HTMLElement | null;\n\n  if (!el || !child) {\n    console.warn(`colorChange: Missing parent or child `);\n    return;\n  }\n\n  gsap.to(child, {\n    scrollTrigger: {\n      trigger: el,\n      start: `${position} ${start}%`,\n      end: `${positionEnd} ${end}%`,\n      scrub: true,\n      markers:mark\n    },\n    backgroundColor:colorto,\n    color:textcolorto\n  });\n})\nScrollTrigger.refresh();\n}\n", "export async function staggerItemScroll() {\n      // Dynamically import GSAP and its plugins\n  const { gsap } = await import('gsap');\n  const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n  gsap.registerPlugin(ScrollTrigger);\n  const elements = document.querySelectorAll<HTMLElement>(`[data-animation=\"stagger\"]`);\n  const cleanups: (() => void)[] = [];\n\n  elements.forEach((el) => {\n  // Parse dataset values with fallbacks\n  const start = el.dataset.start ?? '0';\n  const end = el.dataset.end ?? '100';\n  const position = el.dataset.position ?? 'top';\n  const positionEnd = el.dataset.positionend ?? 'bottom';\n  const mark = el.dataset.mark === 'true';\n\n  const y = el.dataset.y ?? '50';\n  const x = el.dataset.x ?? '0';\n  const duration = parseFloat(el.dataset.duration ?? '0.5');\n\n  const items = el.querySelectorAll<HTMLElement>('*'); \n\n  if (!items.length) return;\n\n  gsap.from(items, {\n    scrollTrigger: {\n      trigger: el,\n      start: `${position} ${start}%`,\n      end: `${positionEnd} ${end}%`,\n      scrub: true,\n      markers:mark,\n    },\n    y: y,\n    x:x,\n    opacity: 0,\n    duration: duration,\n    stagger: 0.2,\n  });\n})\nScrollTrigger.refresh();\n}", "export async function rotateScroll() {\n  const { gsap } = await import('gsap');\n  const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n  gsap.registerPlugin(ScrollTrigger);\n\n  const elements = document.querySelectorAll('[data-animation=\"rotate\"]') as NodeListOf<HTMLElement>;\n  if (!elements.length) {\n    console.warn('\u26A0\uFE0F No elements found for [data-animation=\"rotate\"]');\n    return;\n  }\n\n  elements.forEach((el, index) => {\n    const start = el.dataset.start ?? '0';\n    const end = el.dataset.end ?? '100';\n    const position = el.dataset.position ?? 'top';\n    const positionEnd = el.dataset.positionend ?? 'bottom';\n    const mark = el.dataset.mark === 'true';\n    const amount = parseFloat(el.dataset.amount ?? '720');\n    const duration = parseFloat(el.dataset.duration ?? '0.5');\n\n    const children = el.querySelectorAll('*') as NodeListOf<HTMLElement>;\n    if (!children.length) return;\n\n    // Reset rotation to 0\n    gsap.set(children, { rotation: 0 });\n\n    // Create timeline with ScrollTrigger\n    const tl = gsap.timeline({\n      scrollTrigger: {\n        trigger: el,\n        start: `${position} ${start}%`,\n        end: `${positionEnd} ${end}%`,\n        scrub:true,\n        markers: mark,\n        id: `rotate-${index + 1}`,\n      },\n    });\n\n    // Animate children one after another\n    tl.to(children, {\n      rotation: amount,\n      duration,\n      ease: 'power1.out',\n      stagger: duration, // one after the other\n    });\n  });\n\n  setTimeout(() => {\n    ScrollTrigger.refresh();\n  }, 300);\n}\n", "// make option of top down\nexport async function progressBar(){\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n\n      const elements = document.querySelectorAll<HTMLElement>(`[data-animation=\"progress\"]`);\n      const cleanups: (() => void)[] = [];\n    \n      elements.forEach((el) => {\n      // Parse dataset values with fallbacks\n      const start = el.dataset.start ?? '0';\n      const end = el.dataset.end ?? '100';\n      const position = el.dataset.position ?? 'top';\n      const positionEnd = el.dataset.positionend ?? 'bottom';\n      const mark = el.dataset.mark === 'true';\n      const y = el.dataset.y ?? '0';\n      const x = el.dataset.x ?? '0';\n\n\n  const children = el.querySelectorAll<HTMLElement>('*'); // Direct children only\n\n  if (!children.length) return;\n    gsap.to(children, {\n        scrollTrigger: {\n          trigger: el,\n          start: `${position} ${start}%`,\n          end: `${positionEnd} ${end}%`,\n          scrub: 3,\n          markers:mark\n        },\n        width: `${x}%`,\n        // height:`${y}%`,\n      });\n    })\n    ScrollTrigger.refresh();\n}", "export async function Pin(){\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger)\n\n      const elements = document.querySelectorAll<HTMLElement>(`[data-animation=\"pin\"]`);\n      const cleanups: (() => void)[] = [];\n    \n      elements.forEach((el) => {\n      // Parse dataset values with fallbacks\n      const start = el.dataset.start ?? '0';\n      const end = el.dataset.end ?? '100';\n      const position = el.dataset.position ?? 'top';\n      const positionEnd = el.dataset.positionend ?? 'bottom';\n      const mark = el.dataset.mark === 'true';\n\n    gsap.to(el, {\n        scrollTrigger: {\n          trigger: el,\n          pin: true,\n          start: `${position} ${start}`,\n          end: `${positionEnd} ${end}`,\n          scrub:true,\n          markers:mark,\n          pinSpacing:false\n        }\n      });\n    })\n    ScrollTrigger.refresh();\n}"],
  "mappings": "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",
  "names": []
}
