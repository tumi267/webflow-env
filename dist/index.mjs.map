{
  "version": 3,
  "sources": ["../src/utils/horizontalScroll.ts", "../src/utils/threepanelfadein.ts", "../src/utils/svgScroll.ts", "../src/utils/contextual.ts", "../src/utils/videoScrub.ts", "../src/utils/vidOnSnap.ts", "../src/index.ts"],
  "sourcesContent": ["\n\nexport async function horizontalScroll(id: string,start:number,mark:boolean):Promise<void>  {\n      // Dynamically import GSAP and its plugins\n      const { gsap } = await import('gsap');\n      const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n      gsap.registerPlugin(ScrollTrigger);\n  const container = document.querySelector(`#${id}`) as HTMLElement | null;\n\n  if (!container) {\n    console.warn('horizontalScroll: container not found.');\n    return;\n  }\n\n  // Scope the panels to only those inside the container\n  const panels = Array.from(container.querySelectorAll<HTMLElement>('.panel_horizontal'));\n  const panelCount = panels.length;\n\n  if (panelCount === 0) {\n    console.warn('horizontalScroll: No .panel_horizontal elements found inside container.');\n    return;\n  }\n\n  // Set the container's width to fit all panels horizontally\n  gsap.set(container, {\n    width: `${100 * panelCount}vw`\n  });\n\n  // Create the horizontal scroll animation\n  gsap.to(panels, {\n    xPercent: -100 * (panelCount - 1),\n    ease: \"none\",\n    scrollTrigger: {\n      trigger: container,\n      pin: true,\n      scrub: 1,\n      \n      snap: 1 / (panelCount - 1),\n      start: `top ${start}%`,\n      end: () => \"+=\" + (container.scrollWidth - window.innerWidth),\n      markers:mark,\n    }\n  });\n}\n", "export async function threePanelFade(id: string,start:number,mark:boolean) {\n        // Dynamically import GSAP and its plugins\n        const { gsap } = await import('gsap');\n        const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n        gsap.registerPlugin(ScrollTrigger);\n    \n    const wrapper = document.getElementById(id);\n    if (!wrapper) {\n        console.warn(`Wrapper element not found: ${id}`);\n        return;\n    }\n\n    // Get all direct children (regardless of their tag or class)\n    const children = Array.from(wrapper.children);\n    if (children.length === 0) {\n        console.warn('No child elements found in wrapper');\n        return;\n    }\n\n    const tl = gsap.timeline({\n        scrollTrigger: {\n            trigger: wrapper,\n            start: `top ${start}%`,\n            end: `+=${children.length * 100}%`,\n            scrub: true,\n            pin: true,\n            markers:mark?true:false,\n        }\n    });\n\n    // Animation patterns (bottom \u2192 left \u2192 right \u2192 repeat)\n    const animations = [\n        { y: 200, opacity: 0 }, // bottom\n        { x: -200, opacity: 0 }, // left\n        { x: 200, opacity: 0 }   // right\n    ];\n\n    children.forEach((child, index) => {\n        const animationType = animations[index % animations.length];\n        tl.from(child, {\n            ...animationType,\n            duration: 0.5,\n            ease: \"power2.out\"\n        }, index * 0.1); // slight stagger\n    });\n\n    // Optional: Return cleanup function for frameworks\n    return () => ScrollTrigger.getAll().forEach(st => st.kill());\n}", "export async function svgScroll(id: string,start:number,mark:boolean): Promise<void> {\n  // Dynamically import GSAP and plugins\n  const { gsap } = await import('gsap');\n  const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n  const { DrawSVGPlugin } = await import('gsap/DrawSVGPlugin');\n  const { MotionPathPlugin } = await import('gsap/MotionPathPlugin');\n\n  // Register plugins\n  gsap.registerPlugin(ScrollTrigger, DrawSVGPlugin, MotionPathPlugin);\n\n  gsap.set('.ball01', { x: -5, y: 0, autoAlpha: 1 });\n\n  // Pulses animation\n  const pulses = gsap.timeline();\n  pulses.fromTo(\n    '.ball02, .text01',\n    { autoAlpha: 0, scale: 0 },\n    {\n      autoAlpha: 1,\n      scale: 2,\n      transformOrigin: 'center',\n      ease: 'elastic(2.5, 1)',\n    },\n    0.2\n  );\n  pulses.fromTo(\n    '.ball03, .text02',\n    { autoAlpha: 0, scale: 0 },\n    {\n      autoAlpha: 1,\n      scale: 2,\n      transformOrigin: 'center',\n      ease: 'elastic(2.5, 1)',\n    },\n    0.56\n  );\n  pulses.fromTo(\n    '.ball04, .text03',\n    { autoAlpha: 0, scale: 0 },\n    {\n      autoAlpha: 1,\n      scale: 2,\n      transformOrigin: 'center',\n      ease: 'elastic(2.5, 1)',\n    },\n    1\n  );\n\n  // Main animation with ScrollTrigger\n  const main = gsap.timeline({\n    scrollTrigger: {\n      trigger: `#${id}`,\n      scrub: true,\n      start: `top ${start}`,\n      end: '+=300%',\n      markers:mark?true:false,\n    },\n  });\n\n  main\n    .from('.theLine', { drawSVG: 0, duration: 4 })\n    .to(\n      '.ball01',\n      {\n        motionPath: {\n          path: '.theLine',\n          align: '.theLine',\n          alignOrigin: [0.5, 0.5],\n          start: 0,\n          end: 1,\n        },\n        duration: 4,\n      },\n      0\n    )\n    .add(pulses, 0);\n}\n", "\n\n\nexport async function Contextual(id: string,start:number,mark:Boolean) {\n        // Dynamically import GSAP and its plugins\n        const { gsap } = await import('gsap');\n        const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n        \n        gsap.registerPlugin(ScrollTrigger)\n\n    ScrollTrigger.create({\n        trigger: `#${id}`,\n        start: `top ${start}%`,\n        end: \"bottom top\",\n        markers:mark?true:false,\n        onEnter: (self) => {\n            // Only affect the triggering element\n            const element = self.trigger as HTMLElement;\n            element.style.display = 'block';\n        },\n        onLeaveBack: (self) => {\n            // Only affect the triggering element\n            const element = self.trigger as HTMLElement;\n            element.style.display = 'none';\n        }\n    });\n}", "export async function videoScrub() {\n      // Dynamically import GSAP and its plugins\n    const { gsap } = await import('gsap');\n    const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n \n  const vid = document.querySelector(\".vid\") as HTMLVideoElement;\n  if (!vid) return;\n\n  vid.addEventListener(\"loadedmetadata\", () => {\n    let scrubbedTime = 0;\n\n    ScrollTrigger.create({\n      trigger: vid,\n      start: \"top top\",\n      end: `+=${vid.duration * 1500}`,\n      pin: true,\n      scrub: true,\n      \n      onUpdate: (self) => {\n        scrubbedTime = vid.duration * self.progress;\n      },\n    });\n\n    gsap.ticker.add(() => {\n      if (!isNaN(scrubbedTime) && vid.readyState >= 2) {\n        vid.currentTime += (scrubbedTime - vid.currentTime) * 1;\n      }\n    });\n  });\n}\n", "\nexport async function vidOnSnap() {\n    // Dynamically import GSAP and its plugins\n    const { gsap } = await import('gsap');\n    const { ScrollTrigger } = await import('gsap/ScrollTrigger');\n\n  const vid = document.querySelector(\".vid2\") as HTMLVideoElement;\n  if (!vid) return;\n\n  // Ensure video is ready\n  if (vid.readyState >= 2) { // HAVE_CURRENT_DATA\n    initScrub();\n  } else {\n    vid.addEventListener(\"loadedmetadata\", initScrub, { once: true });\n  }\n\n  function initScrub() {\n    // Calculate scroll distance (adjust multiplier as needed)\n    const scrollDistance = vid.duration * 500; // 500px per second\n    \n    ScrollTrigger.create({\n      trigger: vid,\n      start: \"top top\",\n      end: `+=${scrollDistance}`,\n      pin: true,\n      scrub: true, // Smooth scrubbing\n     \n      onUpdate: (self) => {\n        if (vid.duration) {\n          // Directly set currentTime for immediate scrubbing\n          vid.currentTime = vid.duration * self.progress;\n        }\n      },\n      onRefresh: () => vid.currentTime = 0 // Reset on resize\n    });\n\n    // Optional: Play/pause based on visibility\n    ScrollTrigger.addEventListener(\"scrollEnd\", () => {\n      if (ScrollTrigger.isInViewport(vid)) {\n        vid.play();\n      } else {\n        vid.pause();\n      }\n    });\n  }\n}\n", "import { horizontalScroll } from '$utils/horizontalScroll';\nimport { threePanelFade } from '$utils/threepanelfadein';\nimport { svgScroll } from '$utils/svgScroll';\nimport { Contextual } from '$utils/contextual';\nimport { videoScrub } from './utils/videoScrub';\nimport { vidOnSnap } from '$utils/vidOnSnap';\n\n\n\n// Expose globally for plain <script> tag usage\n// (globalThis as any).initDecodeAnimations = initDecodeAnimations;\n// (globalThis as any).initLineAnimations = initLineAnimations;\n// (globalThis as any).initWordAnimations = initWordAnimations;\n// (globalThis as any).initCharAnimations = initCharAnimations;\n// (globalThis as any).initMaskAnimation = initMaskAnimation;\n// (globalThis as any).initTracking = initTracking;\n// (globalThis as any).rollReveal = rollReveal;\n// (globalThis as any).rollRevealReverse = rollRevealReverse;\n// (globalThis as any).fadeIn = fadeIn;\n// (globalThis as any).flipReveal = flipReveal;\n// (globalThis as any).pan = pan;\n// (globalThis as any).slideInLeft = slideInLeft;\n// (globalThis as any).slideInRight = slideInRight;\n// (globalThis as any).zoom = zoom;\n// (globalThis as any).fadeInScroll = fadeInScroll;\n// (globalThis as any).Pin = Pin;\n// (globalThis as any).progressBar = progressBar;\n// (globalThis as any).rotateScroll = rotateScroll;\n// (globalThis as any).growScroll = growScroll;\n// (globalThis as any).staggerItemScroll = staggerItemScroll;\n// (globalThis as any).slideInLeftScroll = slideInLeftScroll;\n// (globalThis as any).slideInRightScroll = slideInRightScroll;\n// (globalThis as any).toggleScroll = toggleScroll;\n// (globalThis as any).colorChange = colorChange;\n// (globalThis as any).horizontalScroll = horizontalScroll;\n// (globalThis as any).threePanelfade = threePanelfade;\n// (globalThis as any).svgScroll = svgScroll;\n// (globalThis as any).Contextual = Contextual;\n// (globalThis as any).videoScrub = videoScrub;\n// (globalThis as any).vidOnSnap = vidOnSnap;\n\n\n// step based\n\n// three panel fade in from differant directions\nthreePanelFade('panel-wrapper',-10,false)\n// svg follow the scroll\nsvgScroll('svg_contain',100,false)\n\n// horizontal scroll\nhorizontalScroll('container_horizontal',0,true)\n\n// Contextual/popups\nContextual('Contextual',-10,false)\n// scrub video\nvideoScrub()\n// play vid on snap\nvidOnSnap()\n\n\n// window.Webflow ||= [];\n// window.Webflow.push(() => {\n//   const name = 'John Doe';\n//   greetUser(name);\n// });\n\n\n\n\n// tl.to('.slice', {\n//   xPercent: -100,\n//   duration: 1,\n//   stagger: {\n//     each: 0.1,\n//     from: 'center',\n//   },\n//   repeat: -1,\n//   repeatDelay: 1,\n//   yoyo: true,\n//   ease: 'expo.out',\n// });\n// gsap.from('.image3', {\n//   repeat: -1,\n//   y: -200,\n//   ease: 'sine.inOut',\n//   stagger: {\n//     each: 0.1,\n//     from: 'end',\n//   },\n// });\n"],
  "mappings": "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",
  "names": []
}
